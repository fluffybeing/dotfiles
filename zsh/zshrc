# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#
DISABLE_AUTO_TITLE="true"

function set_terminal_title() {
  echo -en "\e]2;$@\a"
}

export ITERM_24BIT=1

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Brew
eval "$(/opt/homebrew/bin/brew shellenv)"

# Exercism
if [ -f ~/.config/exercism/exercism_completion.zsh ]; then
  . ~/.config/exercism/exercism_completion.zsh
fi

# Convert cd to cd >> ls
autoload -U add-zsh-hook
add-zsh-hook -Uz chpwd (){ ls -a; }

eval "$(rbenv init -)"

# Paths
export LDFLAGS="-L/usr/local/opt/ruby/lib"
export CPPFLAGS="-I/usr/local/opt/ruby/include"

export PATH="$PATH:/usr/local/opt/flutter/bin"
export PATH="$PATH:/usr/local/opt/flutter/bin/cache/dart-sdk/bin"

export PATH="/usr/local/opt/ruby/bin:$PATH"
export PATH="$HOME/.emacs.d/bin:$PATH"
export PATH=/usr/local/bin:$PATH

export PATH="$PATH:$(go env GOPATH)/bin"
export DYLD_FALLBACK_LIBRARY_PATH=/usr/local/opt/openssl/lib:$DYLD_FALLBACK_LIBRARY_PATH

export PATH="/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin:$PATH"

# JAVA
export PATH="/usr/local/opt/openjdk/bin:$PATH"
export CPPFLAGS="-I/usr/local/opt/openjdk/include"

# Python
alias python="/opt/homebrew/bin/python3"
alias pip="/opt/homebrew/bin/pip3"

# NVM
export NVM_DIR="$HOME/.nvm"
[ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/usr/local/opt/nvm/etc/bash_completion" ] && . "/usr/local/opt/nvm/etc/bash_completion"

##############
# Utils
##############
alias kindle="/usr/local/bin/k2pdfopt"
alias hs='history | grep'

###################
#iOS  Workflow
####################
alias cleanSimulator="xcrun simctl erase all"
alias swiftGenerateProject="swift package generate-xcodeproj"
alias deleteDeriveData="rm -rf ~/Library/Developer/Xcode/DerivedData"


################
# Spotify
################
alias bfs="SPT_CLIENT=\"../client\" SPT_SPTREMOTECONFIGURATION_USE_SOURCE=1 rake build:all"

rb() {
  rake build:all
  open Spotify.xcodeproj
}

cb() {
  kill $(ps aux | grep 'Xcode' | awk '{print $2}')
  make xcode_SPTRemoteConfigurationSDK
  open tools/apple/rules_xcodeproj/projects/SPTRemoteConfigurationSDK.xcodeproj 
}

###################
#    Git 
###################
alias gpr='git pull upstream master --rebase'
alias gpp='"$(gpr)" && git push origin "$(git-branch-current 2> /dev/null)"'

gcu() {
  git switch -c "$1" upstream/master
}

################
# Neovim
################
alias vi="nvim"
alias vim="nvim"
alias view="nvim -R"
alias vimdiff="nvim -d"

# run magit from a shell
export ALTERNATE_EDITOR=""
export EDITOR=emacsclient

alias magit='emacs -nw -a " " "(magit-status \"$(git rev-parse --show-toplevel)\")"'

mg() {
    git_root=$(git rev-parse --show-toplevel)
    if [ $? -eq 0 ]; then 
      emacs -e "(magit-status \"${git_root}\")"
      if [[ -f `which osascript` ]]; then
         osascript -e "tell application \"Emacs\" to activate"
      fi
    else 
      return $?
    fi
}

lg() {
  export LAZYGIT_NEW_DIR_FILE=~/.lazygit/newdir

  lazygit "$@"

  if [ -f $LAZYGIT_NEW_DIR_FILE ]; then
    cd "$(cat $LAZYGIT_NEW_DIR_FILE)"
    rm -f $LAZYGIT_NEW_DIR_FILE > /dev/null
  fi
}

# I want to limit the Xcode indexing CPU usage
limitCPU() {
  cpulimit -l 20 -p $(pgrep -f com.apple.dt.SKAgent)
}

# build flutter
fbuild() {
  flutter pub get
  flutter packages pub run build_runner build --delete-conflicting-outputs
  flutter build ios --debug --no-codesign --simulator
  flutter attach
}

# sync fork with the remote
syncf() {
  # Assumes that the git repository has upstream and remote urls set
  # Assumes that you've committed your work on your current branch
  current_branch=$(git rev-parse --abbrev-ref HEAD)
  git checkout master
  git pull --rebase

  git push # origin

  git checkout $current_branch
  git rebase master
}

# Go related
#export GOROOT=/Users/rahulr/.go
#export PATH=$GOROOT/bin:$PATH
#export GOPATH=/Users/rahulr/go
#export PATH=$GOPATH/bin:$PATH

# Not using anymore
# Open org folder
alias org="emacs $HOME/Dropbox/org/"

export LDFLAGS="-L/usr/local/opt/openssl@1.1/lib"
export CPPFLAGS="-I/usr/local/opt/openssl@1.1/include"
export PATH="/usr/local/opt/openssl@1.1/bin:$PATH"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"

# Fig post block. Keep at the bottom of this file.
[[ -f "$HOME/.fig/shell/zshrc.post.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.post.zsh"
